### Starting build.
# Target: test.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), debug, extension:ml, file:test.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -modules test.ml > test.ml.depends
# Target: player.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), debug, extension:mli, file:player.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -modules player.mli > player.mli.depends # cached
# Target: board.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), debug, extension:mli, file:board.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -modules board.mli > board.mli.depends # cached
# Target: board.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:board.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -o board.cmi board.mli # cached
# Target: resource.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), debug, extension:mli, file:resource.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -modules resource.mli > resource.mli.depends # cached
# Target: resource.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:resource.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -o resource.cmi resource.mli # cached
# Target: player.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:player.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -o player.cmi player.mli # cached
# Target: test.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:test.cmo, file:test.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -o test.cmo test.ml
# Target: player.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), debug, extension:ml, file:player.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -modules player.ml > player.ml.depends # cached
# Target: tile.mli.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), debug, extension:mli, file:tile.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -modules tile.mli > tile.mli.depends # cached
# Target: tile.cmi, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:tile.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -o tile.cmi tile.mli # cached
# Target: player.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:player.cmo, file:player.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -o player.cmo player.ml # cached
# Target: resource.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), debug, extension:ml, file:resource.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -modules resource.ml > resource.ml.depends # cached
# Target: resource.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:resource.cmo, file:resource.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -o resource.cmo resource.ml # cached
# Target: board.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), debug, extension:ml, file:board.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -modules board.ml > board.ml.depends # cached
# Target: board.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:board.cmo, file:board.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -o board.cmo board.ml # cached
# Target: tile.ml.depends, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), debug, extension:ml, file:tile.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -modules tile.ml > tile.ml.depends # cached
# Target: tile.cmo, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:tile.cmo, file:tile.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx -o tile.cmo tile.ml # cached
# Target: test.byte, tags: { package(ANSITerminal), package(bisect_ppx), package(ounit2), package(yojson), byte, debug, dont_link_with, extension:byte, file:test.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -g -package ounit2 -package yojson -package ANSITerminal -package bisect_ppx resource.cmo tile.cmo board.cmo player.cmo test.cmo -o test.byte
# Compilation successful.
