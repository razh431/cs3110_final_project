### Starting build.
# Target: test.ml.depends, tags: { package(ANSITerminal), package(ounit2), package(yojson), debug, extension:ml, file:test.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -modules test.ml > test.ml.depends
# Target: tile.mli.depends, tags: { package(ANSITerminal), package(ounit2), package(yojson), debug, extension:mli, file:tile.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -modules tile.mli > tile.mli.depends # cached
# Target: resource.mli.depends, tags: { package(ANSITerminal), package(ounit2), package(yojson), debug, extension:mli, file:resource.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -modules resource.mli > resource.mli.depends # cached
# Target: resource.cmi, tags: { package(ANSITerminal), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:resource.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -o resource.cmi resource.mli # cached
# Target: tile.cmi, tags: { package(ANSITerminal), package(ounit2), package(yojson), byte, compile, debug, extension:mli, file:tile.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -o tile.cmi tile.mli # cached
# Target: test.cmo, tags: { package(ANSITerminal), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:test.cmo, file:test.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -o test.cmo test.ml
# Target: tile.ml.depends, tags: { package(ANSITerminal), package(ounit2), package(yojson), debug, extension:ml, file:tile.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -modules tile.ml > tile.ml.depends
# Target: tile.cmo, tags: { package(ANSITerminal), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:tile.cmo, file:tile.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -o tile.cmo tile.ml
# Target: resource.ml.depends, tags: { package(ANSITerminal), package(ounit2), package(yojson), debug, extension:ml, file:resource.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package yojson -package ANSITerminal -modules resource.ml > resource.ml.depends # cached
# Target: resource.cmo, tags: { package(ANSITerminal), package(ounit2), package(yojson), byte, compile, debug, extension:cmo, extension:ml, file:resource.cmo, file:resource.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package yojson -package ANSITerminal -o resource.cmo resource.ml # cached
# Target: test.byte, tags: { package(ANSITerminal), package(ounit2), package(yojson), byte, debug, dont_link_with, extension:byte, file:test.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -g -package ounit2 -package yojson -package ANSITerminal resource.cmo tile.cmo test.cmo -o test.byte
# Compilation successful.
